/*
 * Copyright (c) 2024 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;

#include <rpi_pico/rp2040.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/pinctrl/rpi-pico-rp2040-pinctrl.h>


/ {
    model = "daertwing";
	compatible = "raspberrypi,rp2040";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
		zephyr,flash-controller = &ssi; //?? pete only
		// zephyr,console = &uart0; //?? pete only, but not sure whether special uart is needed for non-split
        zephyr,console = &cdc_acm_uart; //?? de60 only
        // zephyr,shell-uart = &cdc_acm_uart; //?? de60 only
        zephyr,code-partition = &code_partition;
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
    };

    xtal_clk: xtal-clk {
        compatible = "fixed-clock";
        clock-frequency = <12000000>;
        #clock-cells = <0>;
    };

    default_transform: keymap_transform {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
        map = <
			RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)         RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
			RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)         RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
			RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)         RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
			                        RC(3,3) RC(3,4) RC(3,9) RC(3,5) RC(3,6) 
        >;
    };

    bottom_encoder: bottom_encoder {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        // resolution = <4>;
        steps = <80>;
        status = "okay";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&bottom_encoder>;
        triggers-per-rotation = <20>;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;
        row-gpios
            = <&gpio0 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&gpio0 5 GPIO_ACTIVE_HIGH>
            , <&gpio0 4 GPIO_ACTIVE_HIGH>
            , <&gpio0 3 GPIO_ACTIVE_HIGH>
            , <&gpio0 2 GPIO_ACTIVE_HIGH>
            , <&gpio0 1 GPIO_ACTIVE_HIGH>
            , <&gpio0 12 GPIO_ACTIVE_HIGH>
            , <&gpio0 11 GPIO_ACTIVE_HIGH>
            , <&gpio0 10 GPIO_ACTIVE_HIGH>
            , <&gpio0 9 GPIO_ACTIVE_HIGH>
            , <&gpio0 6 GPIO_ACTIVE_HIGH>
            ;
    };
};

&flash0 {
	/* 8MB of flash minus the 0x100 used for
	 * the second stage bootloader
	 */
    reg = <0x10000000 DT_SIZE_M(16)>;

    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* Reserved memory for the second stage bootloader */ //?? de60 only
        // second_stage_bootloader: partition@0 {
        //     reg = <0x00000000 0x100>;
        //     read-only;
        // };

		/*
		 * Start at the beginning of usable flash, 8MB minus the
		 * second stage space and the 16 KiB reserved for settings
		 */
        code_partition: partition@100 {
            reg = <0x100 (DT_SIZE_M(16) - 0x100 - DT_SIZE_K(512))>; //?? pete
            // reg = <0x100 (DT_SIZE_M(16) - 0x100)>; //?? de60
            read-only;
        };

		storage_partition: partition@180000 { //?? pete only
			reg = <0xf80000 DT_SIZE_K(512)>;
			read-only;
		};
    };
};


&usbd {
  status = "okay";
  cdc_acm_uart: cdc_acm_uart {
    compatible = "zephyr,cdc-acm-uart";
  };
};
